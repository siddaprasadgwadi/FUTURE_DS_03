# -*- coding: utf-8 -*-
"""FUTURE_DS3ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zJI4U0v5HfMktkuxxPkpscmpeOzPqGM3
"""

# Commented out IPython magic to ensure Python compatibility.

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# %matplotlib inline


file_path = "Student_Satisfaction_Survey.csv"
df = pd.read_csv(file_path, encoding="latin1")

df.columns = df.columns.str.strip()

df[['Average', 'Percentage']] = df['Average/ Percentage'].str.split("/", expand=True)
df['Average'] = df['Average'].astype(str).str.strip().astype(float)
df['Percentage'] = df['Percentage'].astype(str).str.strip().astype(float)

df.drop(columns=['Average/ Percentage'], inplace=True)

print("‚úÖ Data Loaded Successfully!")
print(df.head())

weightage_cols = ['Weightage 1', 'Weightage 2', 'Weightage 3', 'Weightage 4', 'Weightage 5']
rating_distribution = df[weightage_cols].sum()

plt.figure(figsize=(6,4))
sns.barplot(x=rating_distribution.index, y=rating_distribution.values, palette="viridis")
plt.title("Overall Rating Distribution (All Feedback)")
plt.ylabel("Total Responses")
plt.show()

print(rating_distribution)

question_avg = df.groupby("Questions")["Average"].mean().sort_values(ascending=False)

top_questions = question_avg.head(5)
bottom_questions = question_avg.tail(5)

print("üî• Top 5 Questions (Highest Satisfaction):")
print(top_questions)
print("\n‚ö†Ô∏è Bottom 5 Questions (Lowest Satisfaction):")
print(bottom_questions)

# Plot
plt.figure(figsize=(8,4))
sns.barplot(x=top_questions.values, y=top_questions.index, palette="Greens_r")
plt.title("Top 5 Questions by Average Rating")
plt.show()

plt.figure(figsize=(8,4))
sns.barplot(x=bottom_questions.values, y=bottom_questions.index, palette="Reds_r")
plt.title("Bottom 5 Questions by Average Rating")
plt.show()

# ================================
# üìä Step 5: Course-Wise Analysis
# ================================
course_avg = df.groupby("Basic Course")["Average"].mean().sort_values(ascending=False)

plt.figure(figsize=(10,5))
sns.barplot(x=course_avg.values, y=course_avg.index, palette="coolwarm")
plt.title("Average Feedback Rating by Course")
plt.xlabel("Average Rating")
plt.ylabel("Course")
plt.show()

print(course_avg)

pivot_table = df.pivot_table(values="Percentage",
                             index="Questions",
                             columns="Basic Course",
                             aggfunc="mean")

plt.figure(figsize=(16,12))
sns.heatmap(pivot_table, cmap="coolwarm", annot=False, cbar=True)

plt.title("Question-Wise Percentage Scores Across Courses", fontsize=16, pad=20)
plt.xticks(rotation=45, ha='right', fontsize=10)
plt.yticks(rotation=0, fontsize=9)
plt.tight_layout()
plt.show()

print("üìä Insights:")
print(f"- Overall average rating across all questions: {df['Average'].mean():.2f}")
print(f"- Highest rated question: {top_questions.index[0]} ({top_questions.values[0]:.2f})")
print(f"- Lowest rated question: {bottom_questions.index[0]} ({bottom_questions.values[0]:.2f})")
print(f"- Best performing course: {course_avg.index[0]} ({course_avg.values[0]:.2f})")
print(f"- Lowest performing course: {course_avg.index[-1]} ({course_avg.values[-1]:.2f})")

print("\nüîë Recommendations:")
print("1. Focus on improving teaching strategies in low-rated questions.")
print("2. Share best practices from top-rated courses with other departments.")
print("3. Provide additional training/workshops where communication & fairness are rated low.")
print("4. Regularly monitor feedback trends semester-wise for improvement tracking.")

